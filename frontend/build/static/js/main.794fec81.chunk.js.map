{"version":3,"sources":["CustomMetric.tsx","index.tsx"],"names":["CustomMetric","state","numClicks","render","Button","variant","onClicked","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"8PAgBMA,E,4MAEKC,MAAQ,CAACC,UAAY,G,EAErBC,OAAS,WACZ,OACI,cAACC,EAAA,EAAD,CACAC,QAAQ,YADR,wBAKP,E,EAEOC,UAAY,WAChB,EAAKC,UACD,SAAAC,GAAS,MAAK,CAACN,UAAWM,EAAUN,UAAY,EAAvC,IACT,kBAAMO,IAAUC,kBAAkB,EAAKT,MAAMC,UAA7C,GAEP,E,yBAlBsBS,KAqBZC,cAAwBZ,GCjCvCa,IAASV,OACL,cAAC,IAAMW,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,Q","file":"static/js/main.794fec81.chunk.js","sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection\n} from \"streamlit-component-lib\"\nimport React, {ReactNode} from \"react\"\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Button from '@mui/material/Button'\n\ninterface State {\n    numClicks: number\n}\n\nclass CustomMetric extends StreamlitComponentBase<State> {\n\n    public state = {numClicks : 0}\n\n    public render = (): ReactNode => {\n        return (\n            <Button \n            variant=\"contained\">\n                Hello World\n            </Button>\n        )\n    }\n\n    private onClicked = (): void => {\n        this.setState(\n            prevState => ({numClicks: prevState.numClicks + 1}),\n            () => Streamlit.setComponentValue(this.state.numClicks)\n        )\n    }\n}\n\nexport default withStreamlitConnection(CustomMetric)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CustomMetric from \"./CustomMetric\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <CustomMetric />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}