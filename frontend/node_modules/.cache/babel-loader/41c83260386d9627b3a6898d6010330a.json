{"ast":null,"code":"var _jsxFileName = \"/Users/bryanlo/Projects/Immigration Law Dashboard/frontend/src/CustomMetric.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomMetric extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      numClicks: 0\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onClicked = () => {\n      this.setState(prevState => ({\n        numClicks: prevState.numClicks + 1\n      }), () => Streamlit.setComponentValue(this.state.numClicks));\n    };\n  }\n\n}\n\nexport default _c = withStreamlitConnection(CustomMetric);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","Button","CustomMetric","state","numClicks","render","onClicked","setState","prevState","setComponentValue"],"sources":["/Users/bryanlo/Projects/Immigration Law Dashboard/frontend/src/CustomMetric.tsx"],"sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection\n} from \"streamlit-component-lib\"\nimport React, {ReactNode} from \"react\"\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Button from '@mui/material/Button'\n\ninterface State {\n    numClicks: number\n}\n\nclass CustomMetric extends StreamlitComponentBase<State> {\n\n    public state = {numClicks : 0}\n\n    public render = (): ReactNode => {\n        return (\n            <Button>Hello World</Button>\n        )\n    }\n\n    private onClicked = (): void => {\n        this.setState(\n            prevState => ({numClicks: prevState.numClicks + 1}),\n            () => Streamlit.setComponentValue(this.state.numClicks)\n        )\n    }\n}\n\nexport default withStreamlitConnection(CustomMetric)"],"mappings":";AAAA,SACIA,SADJ,EAEIC,sBAFJ,EAGIC,uBAHJ,QAIO,yBAJP;AAKA,OAAOC,KAAP,MAA+B,OAA/B;AACA,OAAO,4BAAP;AACA,OAAO,4BAAP;AACA,OAAO,4BAAP;AACA,OAAO,4BAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAMA,MAAMC,YAAN,SAA2BJ,sBAA3B,CAAyD;EAAA;IAAA;IAAA,KAE9CK,KAF8C,GAEtC;MAACC,SAAS,EAAG;IAAb,CAFsC;;IAAA,KAI9CC,MAJ8C,GAIrC,MAAiB;MAC7B,oBACI,QAAC,MAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CARoD;;IAAA,KAU7CC,SAV6C,GAUjC,MAAY;MAC5B,KAAKC,QAAL,CACIC,SAAS,KAAK;QAACJ,SAAS,EAAEI,SAAS,CAACJ,SAAV,GAAsB;MAAlC,CAAL,CADb,EAEI,MAAMP,SAAS,CAACY,iBAAV,CAA4B,KAAKN,KAAL,CAAWC,SAAvC,CAFV;IAIH,CAfoD;EAAA;;AAAA;;AAkBzD,oBAAeL,uBAAuB,CAACG,YAAD,CAAtC"},"metadata":{},"sourceType":"module"}