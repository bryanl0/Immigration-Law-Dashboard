{"ast":null,"code":"var _jsxFileName = \"/Users/bryanlo/Projects/Immigration Law Dashboard/frontend/src/CustomMetric.tsx\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface State {\n//     numClicks: number\n// }\nconst marks = [{\n  value: 0,\n  label: '0°C'\n}, {\n  value: 20,\n  label: '20°C'\n}, {\n  value: 37,\n  label: '37°C'\n}, {\n  value: 100,\n  label: '100°C'\n}];\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nclass CustomMetric extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      numClicks: 0\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: \"Hello World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), \"Hello World\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    };\n  } // private onClicked = (): void => {\n  //     this.setState(\n  //         prevState => ({numClicks: prevState.numClicks + 1}),\n  //         () => Streamlit.setComponentValue(this.state.numClicks)\n  //     )\n  // }\n\n\n}\n\nexport default _c = withStreamlitConnection(CustomMetric);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","Button","marks","value","label","valuetext","valueLabelFormat","findIndex","mark","CustomMetric","state","numClicks","render"],"sources":["/Users/bryanlo/Projects/Immigration Law Dashboard/frontend/src/CustomMetric.tsx"],"sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection\n} from \"streamlit-component-lib\"\nimport React, {ReactNode} from \"react\"\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\n\n\n// interface State {\n//     numClicks: number\n// }\n\nconst marks = [\n    {\n      value: 0,\n      label: '0°C',\n    },\n    {\n      value: 20,\n      label: '20°C',\n    },\n    {\n      value: 37,\n      label: '37°C',\n    },\n    {\n      value: 100,\n      label: '100°C',\n    },\n  ];\n  \n  function valuetext(value: number) {\n    return `${value}°C`;\n  }\n  \n  function valueLabelFormat(value: number) {\n    return marks.findIndex((mark) => mark.value === value) + 1;\n  }\n\nclass CustomMetric extends StreamlitComponentBase {\n\n    public state = {numClicks : 0}\n\n    public render = (): ReactNode => {\n        return (\n            <span>\n                <Button>Hello World</Button>\n                Hello World\n            </span>\n        );\n    }\n\n    // private onClicked = (): void => {\n    //     this.setState(\n    //         prevState => ({numClicks: prevState.numClicks + 1}),\n    //         () => Streamlit.setComponentValue(this.state.numClicks)\n    //     )\n    // }\n}\n\nexport default withStreamlitConnection(CustomMetric)"],"mappings":";AAAA,SAEIA,sBAFJ,EAGIC,uBAHJ,QAIO,yBAJP;AAKA,OAAOC,KAAP,MAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAIA;AACA;AACA;AAEA,MAAMC,KAAK,GAAG,CACV;EACEC,KAAK,EAAE,CADT;EAEEC,KAAK,EAAE;AAFT,CADU,EAKV;EACED,KAAK,EAAE,EADT;EAEEC,KAAK,EAAE;AAFT,CALU,EASV;EACED,KAAK,EAAE,EADT;EAEEC,KAAK,EAAE;AAFT,CATU,EAaV;EACED,KAAK,EAAE,GADT;EAEEC,KAAK,EAAE;AAFT,CAbU,CAAd;;AAmBE,SAASC,SAAT,CAAmBF,KAAnB,EAAkC;EAChC,OAAQ,GAAEA,KAAM,IAAhB;AACD;;AAED,SAASG,gBAAT,CAA0BH,KAA1B,EAAyC;EACvC,OAAOD,KAAK,CAACK,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACL,KAAL,KAAeA,KAAzC,IAAkD,CAAzD;AACD;;AAEH,MAAMM,YAAN,SAA2BX,sBAA3B,CAAkD;EAAA;IAAA;IAAA,KAEvCY,KAFuC,GAE/B;MAACC,SAAS,EAAG;IAAb,CAF+B;;IAAA,KAIvCC,MAJuC,GAI9B,MAAiB;MAC7B,oBACI;QAAA,wBACI,QAAC,MAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAMH,CAX6C;EAAA,EAa9C;EACA;EACA;EACA;EACA;EACA;;;AAlB8C;;AAqBlD,oBAAeb,uBAAuB,CAACU,YAAD,CAAtC"},"metadata":{},"sourceType":"module"}