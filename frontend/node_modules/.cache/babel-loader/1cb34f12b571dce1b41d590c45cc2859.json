{"ast":null,"code":"var _jsxFileName = \"/Users/bryanlo/Projects/Immigration Law Dashboard/frontend/src/CustomMetric.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst marks = [{\n  value: 0,\n  label: '0°C'\n}, {\n  value: 20,\n  label: '20°C'\n}, {\n  value: 37,\n  label: '37°C'\n}, {\n  value: 100,\n  label: '100°C'\n}];\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nclass CustomMetric extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      numClicks: 0\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(Slider, {\n        \"aria-label\": \"Restricted values\",\n        defaultValue: 20,\n        valueLabelFormat: valueLabelFormat,\n        getAriaValueText: valuetext,\n        step: null,\n        valueLabelDisplay: \"auto\",\n        marks: marks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onClicked = () => {\n      this.setState(prevState => ({\n        numClicks: prevState.numClicks + 1\n      }), () => Streamlit.setComponentValue(this.state.numClicks));\n    };\n  }\n\n}\n\nexport default _c = withStreamlitConnection(CustomMetric);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","Slider","marks","value","label","valuetext","valueLabelFormat","findIndex","mark","CustomMetric","state","numClicks","render","onClicked","setState","prevState","setComponentValue"],"sources":["/Users/bryanlo/Projects/Immigration Law Dashboard/frontend/src/CustomMetric.tsx"],"sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection\n} from \"streamlit-component-lib\"\nimport React, {ReactNode} from \"react\"\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\n\n\ninterface State {\n    numClicks: number\n}\n\nconst marks = [\n    {\n      value: 0,\n      label: '0°C',\n    },\n    {\n      value: 20,\n      label: '20°C',\n    },\n    {\n      value: 37,\n      label: '37°C',\n    },\n    {\n      value: 100,\n      label: '100°C',\n    },\n  ];\n  \n  function valuetext(value: number) {\n    return `${value}°C`;\n  }\n  \n  function valueLabelFormat(value: number) {\n    return marks.findIndex((mark) => mark.value === value) + 1;\n  }\n\nclass CustomMetric extends StreamlitComponentBase<State> {\n\n    public state = {numClicks : 0}\n\n    public render = (): ReactNode => {\n        return (\n            <Slider\n            aria-label=\"Restricted values\"\n            defaultValue={20}\n            valueLabelFormat={valueLabelFormat}\n            getAriaValueText={valuetext}\n            step={null}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n          />\n        );\n    }\n\n    private onClicked = (): void => {\n        this.setState(\n            prevState => ({numClicks: prevState.numClicks + 1}),\n            () => Streamlit.setComponentValue(this.state.numClicks)\n        )\n    }\n}\n\nexport default withStreamlitConnection(CustomMetric)"],"mappings":";AAAA,SACIA,SADJ,EAEIC,sBAFJ,EAGIC,uBAHJ,QAIO,yBAJP;AAKA,OAAOC,KAAP,MAA+B,OAA/B;AACA,OAAO,4BAAP;AACA,OAAO,4BAAP;AACA,OAAO,4BAAP;AACA,OAAO,4BAAP;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAOA,MAAMC,KAAK,GAAG,CACV;EACEC,KAAK,EAAE,CADT;EAEEC,KAAK,EAAE;AAFT,CADU,EAKV;EACED,KAAK,EAAE,EADT;EAEEC,KAAK,EAAE;AAFT,CALU,EASV;EACED,KAAK,EAAE,EADT;EAEEC,KAAK,EAAE;AAFT,CATU,EAaV;EACED,KAAK,EAAE,GADT;EAEEC,KAAK,EAAE;AAFT,CAbU,CAAd;;AAmBE,SAASC,SAAT,CAAmBF,KAAnB,EAAkC;EAChC,OAAQ,GAAEA,KAAM,IAAhB;AACD;;AAED,SAASG,gBAAT,CAA0BH,KAA1B,EAAyC;EACvC,OAAOD,KAAK,CAACK,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACL,KAAL,KAAeA,KAAzC,IAAkD,CAAzD;AACD;;AAEH,MAAMM,YAAN,SAA2BX,sBAA3B,CAAyD;EAAA;IAAA;IAAA,KAE9CY,KAF8C,GAEtC;MAACC,SAAS,EAAG;IAAb,CAFsC;;IAAA,KAI9CC,MAJ8C,GAIrC,MAAiB;MAC7B,oBACI,QAAC,MAAD;QACA,cAAW,mBADX;QAEA,YAAY,EAAE,EAFd;QAGA,gBAAgB,EAAEN,gBAHlB;QAIA,gBAAgB,EAAED,SAJlB;QAKA,IAAI,EAAE,IALN;QAMA,iBAAiB,EAAC,MANlB;QAOA,KAAK,EAAEH;MAPP;QAAA;QAAA;QAAA;MAAA,QADJ;IAWH,CAhBoD;;IAAA,KAkB7CW,SAlB6C,GAkBjC,MAAY;MAC5B,KAAKC,QAAL,CACIC,SAAS,KAAK;QAACJ,SAAS,EAAEI,SAAS,CAACJ,SAAV,GAAsB;MAAlC,CAAL,CADb,EAEI,MAAMd,SAAS,CAACmB,iBAAV,CAA4B,KAAKN,KAAL,CAAWC,SAAvC,CAFV;IAIH,CAvBoD;EAAA;;AAAA;;AA0BzD,oBAAeZ,uBAAuB,CAACU,YAAD,CAAtC"},"metadata":{},"sourceType":"module"}